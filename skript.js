                 // 1. Выведите числа от 1 до 50 и от 35 до 8.

// {
//     let a = 1;

//     while (a <= 50) {
//         console.log(a);
//         a++;
//     }
// }

// {
//     let a = 35;

//     while (a >= 8) {
//         console.log("   " + a);
//         a--;
//     }
// }

                // 2. Выведите столбец чисел от 89 до 11 - воспользуйтесь циклом while и отделите числа
                //  тегом <br /> друг от друга, чтобы получить столбец, а не строку.

// {
//     let a = 89;

//     while (a >= 11) {
//         document.write(a + "<br/>");
//         a--;
//     }
// }

                // 3. С помощью цикла найдите сумму чисел от 0 до 100.

// {
// let sum = 0;
//   for (let b = 1; b <=100; b++) {
    
//     console.log (sum + "+" +  b + "=" +(sum+b));
//     sum += b;
//    console.log (sum);
  
// }
// }

                // 4. Найдите сумму чисел в каждом числе от 1 до 5, например: в числе 3 сумма составляет 6
                // (1+2+3). 

// let sum =0;

// for (let c=1; c<=5; c++) {
//     sum = 0;

//     for (let d=1; d<=c; d++) {
//         sum +=d;
//     }
//     console.log ("Sum " + c + " = " + sum)
// }
  

                 // 5. Выведите чётные числа от 8 до 56. Решить задание через while и for.

// {
//     for (let e = 8; e <= 56; e++ ) { 
//         if (e % 2 == 0 ) 
//         console.log (e);
//     }
// }

// { 
//     let f = 8;
//     while (f <=56) {
//     f++;
//     if (f % 2==0)
//     console.log  (f);
//     }  
// }

                 // 6. Необходимо вывести на экран полную таблицу умножения (от 2 до 10) в виде:
                 // 2*2 = 4
                 // 2*3 = 6
                 // 2*4 = 8
                 // 2*5 = 10
                 // ...
                 // 3*1=3
                 // 3*2=6
                 // 3*3=9
                 // 3*4=12


// {
// for (let  g = 1; g <=10; g++ ){
//     for (let h =1; h <=10; h++ )

//     document.write(g +  " * "  + h +  " = " + (g*h) + "<br/>" )
// }
// }


//                  7. Дано число n=1000. Делите его на 2 столько раз, пока результат деления не станет
//                  меньше 50. Какое число получится? Посчитайте количество итераций, необходимых
//                  для этого (итерация - это проход цикла), и запишите его в переменную num.

// // {
// let num = 0
// for (let n = 1000; n > 50;  n /= 2) {
//     console.log (n);
//     console.log ("Количество Интераций  " + ( num = (n/n)+num));
// }

// }


                    // 8. Запустите цикл, в котором пользователю предлагается вводить число с клавиатуры, до
                    // тех пор, пока не будет введена пустая строка или 0. После выхода из цикла выведите
                    // общую сумму и среднее арифметическое введённых чисел. Если пользователь ввел не
                    // число, то вывести сообщение об ошибке ввода. При подсчете учесть, что пользователь
                    // может ввести отрицательное значение.


// {
//     let total = 0;
//     let count = 0;

//     for (;;){
//         let num = +prompt("Введите чило:");
//         if (num ===0 )break;
//         if (isFinite(num)){
//             total += num;    // += суммирует все числа которые ввели
//             count++          // считает сколько раз прошёл цикл
//         } else{
//             alert("Это не число")
//         }
//     }

//     console.log("Сумма введённых чисел  " + total);
//     console.log("Среднее значение  " + total/count);
// }


// Не смог решить 9 и 10, В нете есть решения, но без описания, я не понимаю что там просиходит.
// Если Вам не сложно скиньте решение с описанием действий.



// 9. Дана строка с числами разделенными пробелами «4 98 4 6 1 32 4 65 4 3 5 7 89 7 10 1 36
// 8 57». Найдите самое большое и самое маленькое число в строке, используя цикл.



// 10. Дано произвольное целое число n. Написать программу, которая:
// a. разбивает число n на цифры и выводит их на экран;
// b. подсчитывает сколько цифр в числе n;
// c. находит сумму цифр числа n;
// d. меняет порядок цифр числа n на обратный.
// Пример: вводится число 123: цифр в числе = 3; сумма = 6; обратный порядок 321.
